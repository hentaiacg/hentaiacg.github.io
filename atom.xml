<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>Rishinyan</title>
  <icon>https://www.gravatar.com/avatar/41013d0ee83ef3224fadc69640a60e97</icon>
  <subtitle>Wisdom begins in wonder.</subtitle>
  <link href="https://blog.rishinyan.top/atom.xml" rel="self"/>
  
  <link href="https://blog.rishinyan.top/"/>
  <updated>2025-01-11T07:30:00.000Z</updated>
  <id>https://blog.rishinyan.top/</id>
  
  <author>
    <name>Rishinyan</name>
    <email>shinyanri@gmail.com</email>
  </author>
  
  <generator uri="https://hexo.io/">Hexo</generator>
  
  <entry>
    <title>Jeff&#39;s Playlist</title>
    <link href="https://blog.rishinyan.top/Jeff&#39;sPlaylist/"/>
    <id>https://blog.rishinyan.top/Jeff&#39;sPlaylist/</id>
    <published>2025-01-11T07:30:00.000Z</published>
    <updated>2025-01-11T07:30:00.000Z</updated>
    
    <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="https://cdn.jsdelivr.net/npm/aplayer/dist/APlayer.min.css"><script src="https://cdn.jsdelivr.net/npm/aplayer/dist/APlayer.min.js" class="aplayer-secondary-script-marker"></script><script class="meting-secondary-script-marker" src="https://cdn.jsdelivr.net/npm/meting/dist/Meting.min.js"></script><p>emotional<br>        <div id="aplayer-BoZxKvVj" class="aplayer aplayer-tag-marker" style="margin-bottom: 20px;"></div>  <script>  var options = {"narrow":false,"autoplay":false,"showlrc":0,"music":[{"title":"Cry For Me (feat. Ami)","author":"Michita","url":"http://music.163.com/song/media/outer/url?id=27681762.mp3","pic":"http://p2.music.126.net/l23qXUnvTLv2CcFPsJyLEg==/109951170068139096.jpg?param=130y130"},{"title":"There's No Ending","author":"RUANN","url":"http://music.163.com/song/media/outer/url?id=1323304406.mp3","pic":"http://p1.music.126.net/axRnGOYWPKHo0pwYHyqTzQ==/109951163655467590.jpg?param=130y130"}]};  options.element = document.getElementById("aplayer-BoZxKvVj");  var ap = new APlayer(options);    window.aplayers || (window.aplayers = []);  window.aplayers.push(ap);  </script></p><p>Rock<br>        <div id="aplayer-PeTwGBSn" class="aplayer aplayer-tag-marker" style="margin-bottom: 20px;"></div>  <script>  var options = {"narrow":false,"autoplay":false,"showlrc":0,"music":[{"title":"REDLINE DAY","author":"James Shimoji","url":"http://music.163.com/song/media/outer/url?id=22716614.mp3","pic":"http://p1.music.126.net/6dnNDpUDFdwUgOTpWqycMQ==/109951169037350454.jpg?param=130y130"}]};  options.element = document.getElementById("aplayer-PeTwGBSn");  var ap = new APlayer(options);    window.aplayers || (window.aplayers = []);  window.aplayers.push(ap);  </script></p>]]></content>
    
    
    <summary type="html">Jeff&#39;s information</summary>
    
    
    
    
  </entry>
  
  <entry>
    <title>Centos7.9 编译 Hadoop3.4.0</title>
    <link href="https://blog.rishinyan.top/CentosCompliesHadoop/"/>
    <id>https://blog.rishinyan.top/CentosCompliesHadoop/</id>
    <published>2024-07-18T10:33:00.000Z</published>
    <updated>2025-03-03T18:14:55.334Z</updated>
    
    <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="https://cdn.jsdelivr.net/npm/aplayer/dist/APlayer.min.css"><script src="https://cdn.jsdelivr.net/npm/aplayer/dist/APlayer.min.js" class="aplayer-secondary-script-marker"></script><script class="meting-secondary-script-marker" src="https://cdn.jsdelivr.net/npm/meting/dist/Meting.min.js"></script><h2 id="介绍"><a href="#介绍" class="headerlink" title="介绍"></a>介绍</h2><p>hadoop 开发环境，以及阅读源码</p><h2 id="环境"><a href="#环境" class="headerlink" title="环境"></a>环境</h2><div class="note info flat"><p>hadoop building 所需环境, 参考 <code>hadoop-3.4.0-src\BUILDING.txt</code> 文件</p></div><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><span class="line">Requirements:</span><br><span class="line"></span><br><span class="line">* Unix System 类 unix 系统</span><br><span class="line">* JDK 1.8 java8版本，hadoop 由 java 编写</span><br><span class="line">* Maven 3.3 or later 提供 hadoop 编译依赖包</span><br><span class="line">* Boost 1.72 (if compiling native code) 提供 C++ 库，增强 C++ 的功能</span><br><span class="line">* Protocol Buffers 3.7.1 (if compiling native code) 用于序列化结构化数据</span><br><span class="line">* CMake 3.19 or newer (if compiling native code) 跨平台的构建系统，用于管理编译过程</span><br><span class="line">* Zlib devel (if compiling native code) 用于数据压缩的库，处理压缩数据</span><br><span class="line">* Cyrus SASL devel (if compiling native code) 用于认证和数据安全</span><br><span class="line">* One of the compilers that support thread_local storage: GCC 9.3.0 or later, Visual Studio,</span><br><span class="line">  Clang (community version), Clang (version for iOS 9 and later) (if compiling native code) 支持 thread_local 存储的编译器，如 GCC 9.3.0 或更高版本，使用线程局部存储来管理多线程环境中的数据</span><br><span class="line">* openssl devel (if compiling native hadoop-pipes and to get the best HDFS encryption performance) OpenSSL 开发库，用于加密和解密</span><br><span class="line">* Linux FUSE (Filesystem in Userspace) version 2.6 or above (if compiling fuse_dfs) FUSE 允许用户在用户空间创建文件系统。Hadoop 的 fuse_dfs 模块需要它来实现 HDFS 与 FUSE 的集成</span><br><span class="line">* Doxygen ( if compiling libhdfspp and generating the documents ) 文档生成器，用于从源代码生成文档，libhdfspp 模块的文档生成需要</span><br><span class="line">* Internet connection for first build (to fetch all Maven and Hadoop dependencies) 初次构建需要互联网连接以获取所有的 Maven 和 Hadoop 依赖项</span><br><span class="line">* python (for releasedocs) Python 用于自动化生成发布文档的过程</span><br><span class="line">* bats (for shell code testing) 用于测试 Bash 脚本的工具，Hadoop 使用它来测试 shell 代码</span><br><span class="line">* Node.js / bower / Ember-cli (for YARN UI v2 building) 构建 YARN 的 UI v2；Node.js 是一个 JavaScript 运行环境；Bower 是一个前端包管理工具；Ember-cli 是一个用于构建 Ember.js 应用的工具</span><br></pre></td></tr></table></figure><div class="note info flat"><p>部署的环境</p></div><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line">CentOS Linux release 7.9.2009 (Core)</span><br><span class="line">java 8</span><br><span class="line">maven 3.9.8</span><br><span class="line">python2</span><br><span class="line">Protocol 3.7.1</span><br><span class="line">GCC 9.3.0</span><br><span class="line">CMake 3.19</span><br><span class="line">Boost 1.72.0</span><br><span class="line">snappy-devel</span><br><span class="line">libzstd-devel</span><br><span class="line">isa-l</span><br><span class="line">Hadoop 3.4.0 源码</span><br></pre></td></tr></table></figure><h3 id="配置基本环境"><a href="#配置基本环境" class="headerlink" title="配置基本环境"></a>配置基本环境</h3><div class="note primary flat"><p>操作均使用 root 用户，若不是 root 用户，确保拥有 sudo 权限</p><p>所涉及应用，均默认在 <code>/opt</code> 目录下</p></div><hr><h4 id="1-Yum-配置"><a href="#1-Yum-配置" class="headerlink" title="1. Yum 配置"></a>1. Yum 配置</h4><p>配置 yum 源</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta prompt_"># </span><span class="language-bash">备份原配置</span></span><br><span class="line">mv /etc/yum.repos.d/CentOS-Base.repo /etc/yum.repos.d/CentOS-Base.repo.backup</span><br><span class="line"><span class="meta prompt_"># </span><span class="language-bash">使用国内 yum 源</span></span><br><span class="line">curl -o /etc/yum.repos.d/CentOS-Base.repo https://mirrors.aliyun.com/repo/Centos-7.repo</span><br><span class="line"><span class="meta prompt_"># </span><span class="language-bash">生成完整缓存</span></span><br><span class="line">yum clean all &amp;&amp; yum makecache</span><br><span class="line"><span class="meta prompt_"># </span><span class="language-bash">查看 yum 源是否添加成功</span></span><br><span class="line">yum repolist</span><br></pre></td></tr></table></figure><p>配置 epel</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta prompt_"># </span><span class="language-bash">安装 epel 源</span></span><br><span class="line">yum install epel-release -y</span><br><span class="line">curl -o /etc/yum.repos.d/epel.repo http://mirrors.aliyun.com/repo/epel-7.repo</span><br><span class="line"><span class="meta prompt_"># </span><span class="language-bash">生成完整缓存</span></span><br><span class="line">yum clean all &amp;&amp; yum makecache</span><br><span class="line"><span class="meta prompt_"># </span><span class="language-bash">查看 yum 源是否添加成功</span></span><br><span class="line">yum repolist</span><br></pre></td></tr></table></figure><p>配置 scl</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta prompt_"># </span><span class="language-bash">安装 scl 源</span></span><br><span class="line">yum install -y centos-release-scl centos-release-scl-rh scl-utils scl-utils-build</span><br><span class="line"><span class="meta prompt_"># </span><span class="language-bash">备份</span></span><br><span class="line">cp CentOS-SCLo-scl.repo&#123;,.bak&#125;</span><br><span class="line">cp CentOS-SCLo-scl-rh.repo&#123;,.bak&#125;</span><br><span class="line"><span class="meta prompt_"></span></span><br><span class="line"><span class="meta prompt_"># </span><span class="language-bash">修改 scl 配置</span></span><br><span class="line">vi /etc/yum.repos.d/CentOS-SCLo-scl.repo</span><br><span class="line">[centos-sclo-sclo]</span><br><span class="line">name=CentOS-7 - SCLo sclo</span><br><span class="line">baseurl=https://mirrors.aliyun.com/centos/7/sclo/$basearch/sclo/</span><br><span class="line">gpgcheck=0</span><br><span class="line">enabled=1</span><br><span class="line">gpgkey=file:///etc/pki/rpm-gpg/RPM-GPG-KEY-CentOS-SIG-SCLo</span><br><span class="line"></span><br><span class="line">vi /etc/yum.repos.d/CentOS-SCLo-scl-rh.repo</span><br><span class="line">[centos-sclo-rh]</span><br><span class="line">name=CentOS-7 - SCLo rh</span><br><span class="line">baseurl=https://mirrors.aliyun.com/centos/7/sclo/$basearch/rh/</span><br><span class="line">gpgcheck=0</span><br><span class="line">enabled=1</span><br><span class="line">gpgkey=file:///etc/pki/rpm-gpg/RPM-GPG-KEY-CentOS-SIG-SCLo</span><br><span class="line"><span class="meta prompt_"></span></span><br><span class="line"><span class="meta prompt_"># </span><span class="language-bash">刷新缓存</span></span><br><span class="line">yum clean all &amp;&amp; yum makecache </span><br><span class="line"><span class="meta prompt_"># </span><span class="language-bash">查看 yum 源是否添加成功</span></span><br><span class="line">yum repolist</span><br></pre></td></tr></table></figure><h4 id="2-安装开发工具"><a href="#2-安装开发工具" class="headerlink" title="2. 安装开发工具"></a>2. 安装开发工具</h4><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">yum -y groupinstall &#x27;Development Tools&#x27;</span><br></pre></td></tr></table></figure><h4 id="3-安装-Python2"><a href="#3-安装-Python2" class="headerlink" title="3. 安装 Python2"></a>3. 安装 Python2</h4><p>安装 python2 去构建文档</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">yum -y install python2</span><br></pre></td></tr></table></figure><h4 id="4-安装-Protocol-Buffers"><a href="#4-安装-Protocol-Buffers" class="headerlink" title="4. 安装 Protocol Buffers"></a>4. 安装 Protocol Buffers</h4><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">cd /opt</span><br><span class="line">git clone https://github.com/protocolbuffers/protobuf</span><br><span class="line">cd protobuf</span><br><span class="line">git checkout v3.7.1</span><br><span class="line">autoreconf -i</span><br><span class="line">./configure --prefix=/usr/local</span><br><span class="line">make</span><br><span class="line">make install</span><br><span class="line">cd ..</span><br></pre></td></tr></table></figure><h4 id="5-安装必须包"><a href="#5-安装必须包" class="headerlink" title="5. 安装必须包"></a>5. 安装必须包</h4><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">yum -y install libtirpc-devel zlib-devel lz4-devel bzip2-devel openssl-devel cyrus-sasl-devel libpmem-devel libffi-devel</span><br></pre></td></tr></table></figure><h4 id="6-安装-GCC"><a href="#6-安装-GCC" class="headerlink" title="6. 安装 GCC"></a>6. 安装 GCC</h4><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">yum install devtoolset-9 -y</span><br><span class="line">source /opt/rh/devtoolset-9/enable</span><br><span class="line"><span class="meta prompt_"></span></span><br><span class="line"><span class="meta prompt_"># </span><span class="language-bash">检查版本</span></span><br><span class="line">gcc --version</span><br><span class="line">g++ --version</span><br></pre></td></tr></table></figure><h4 id="7-安装-CMAKE"><a href="#7-安装-CMAKE" class="headerlink" title="7. 安装 CMAKE"></a>7. 安装 CMAKE</h4><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">cd /opt</span><br><span class="line">curl -L https://cmake.org/files/v3.19/cmake-3.19.0.tar.gz &gt; cmake-3.19.0.tar.gz</span><br><span class="line">tar -zxvf cmake-3.19.0.tar.gz &amp;&amp; cd cmake-3.19.0</span><br><span class="line">./bootstrap</span><br><span class="line">make -j$(nproc)</span><br><span class="line">make install</span><br><span class="line">cd ..</span><br></pre></td></tr></table></figure><h4 id="8-安装-Boost"><a href="#8-安装-Boost" class="headerlink" title="8. 安装 Boost"></a>8. 安装 Boost</h4><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">cd /opt</span><br><span class="line">curl -L -o boost_1_72_0.tar.bz2 https://sourceforge.net/projects/boost/files/boost/1.72.0/boost_1_72_0.tar.bz2/download</span><br><span class="line">tar xjf boost_1_72_0.tar.bz2</span><br><span class="line">cd boost_1_72_0</span><br><span class="line">./bootstrap.sh --prefix=/usr/local</span><br><span class="line">./b2</span><br><span class="line">./b2 install</span><br><span class="line">cd ..</span><br></pre></td></tr></table></figure><h4 id="9-其他"><a href="#9-其他" class="headerlink" title="9. 其他"></a>9. 其他</h4><ul><li><strong>snappy-devel</strong>: Snappy 压缩库的开发文件，用于 Hadoop 的高效压缩。</li><li><strong>libzstd-devel</strong>: Zstandard 压缩库的开发文件，提供另一种压缩选项。</li><li><strong>isa-l</strong>: Intel 提供的一套高效数据处理库，用于优化 Hadoop 的性能。</li></ul><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">yum install snappy-devel libzstd-devel autoconf automake libtool wget -y </span><br></pre></td></tr></table></figure><p>安装 nasm</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">cd /opt</span><br><span class="line">wget https://www.nasm.us/pub/nasm/releasebuilds/2.15.05/nasm-2.15.05.tar.bz2</span><br><span class="line">tar -xvf nasm-2.15.05.tar.bz2</span><br><span class="line">cd nasm-2.15.05</span><br><span class="line">./configure</span><br><span class="line">make</span><br><span class="line">make install</span><br><span class="line">cd ..</span><br></pre></td></tr></table></figure><p>安装 yasm</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">cd /opt</span><br><span class="line">wget http://www.tortall.net/projects/yasm/releases/yasm-1.3.0.tar.gz</span><br><span class="line">tar -xvf yasm-1.3.0.tar.gz</span><br><span class="line">cd yasm-1.3.0</span><br><span class="line">./configure</span><br><span class="line">make</span><br><span class="line">make install</span><br><span class="line">cd ..</span><br></pre></td></tr></table></figure><p>安装 isa-l</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">cd /opt</span><br><span class="line">git clone https://github.com/intel/isa-l</span><br><span class="line">cd isa-l/</span><br><span class="line">./autogen.sh</span><br><span class="line">./configure</span><br><span class="line">make</span><br><span class="line">make install</span><br><span class="line">cd ..</span><br></pre></td></tr></table></figure><h4 id="10-安装-Java"><a href="#10-安装-Java" class="headerlink" title="10. 安装 Java"></a>10. 安装 Java</h4><p>jdk <a href="https://www.oracle.com/cn/java/technologies/downloads/">下载地址</a>，选择 JDK8</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">cd /opt</span><br><span class="line">tar zxvf jdk-8u421-linux-x64.tar.gz</span><br><span class="line">mv jdk1.8.0_421 jdk</span><br></pre></td></tr></table></figure><h4 id="11-安装-Maven"><a href="#11-安装-Maven" class="headerlink" title="11. 安装 Maven"></a>11. 安装 Maven</h4><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br></pre></td><td class="code"><pre><span class="line">cd /opt</span><br><span class="line">wget https://dlcdn.apache.org/maven/maven-3/3.9.8/binaries/apache-maven-3.9.8-bin.tar.gz</span><br><span class="line">tar zxvf apache-maven-3.9.8-bin.tar.gz</span><br><span class="line">mv apache-maven-3.9.8 maven</span><br><span class="line"></span><br><span class="line">vim /opt/maven/conf/settings.xml</span><br><span class="line"><span class="meta prompt_"># </span><span class="language-bash">配置本地仓库</span></span><br><span class="line">&lt;localRepository&gt;/opt/repository&lt;/localRepository&gt; </span><br><span class="line"><span class="meta prompt_"></span></span><br><span class="line"><span class="meta prompt_"># </span><span class="language-bash">配置阿里云服务器镜像</span></span><br><span class="line">&lt;!-- 阿里云仓库 --&gt;</span><br><span class="line">&lt;mirror&gt;</span><br><span class="line">    &lt;id&gt;alimaven&lt;/id&gt;</span><br><span class="line">    &lt;mirrorOf&gt;central&lt;/mirrorOf&gt;</span><br><span class="line">    &lt;name&gt;aliyun maven&lt;/name&gt;</span><br><span class="line">    &lt;url&gt;http://maven.aliyun.com/nexus/content/repositories/central/&lt;/url&gt;</span><br><span class="line">&lt;/mirror&gt;</span><br><span class="line"><span class="meta prompt_"></span></span><br><span class="line"><span class="meta prompt_"># </span><span class="language-bash">配置JDK</span></span><br><span class="line">&lt;!-- java版本 --&gt; </span><br><span class="line">&lt;profile&gt;</span><br><span class="line">      &lt;id&gt;jdk-1.8&lt;/id&gt;</span><br><span class="line">      &lt;activation&gt;</span><br><span class="line">        &lt;activeByDefault&gt;true&lt;/activeByDefault&gt;</span><br><span class="line">        &lt;jdk&gt;1.8&lt;/jdk&gt;</span><br><span class="line">      &lt;/activation&gt;</span><br><span class="line"></span><br><span class="line">      &lt;properties&gt;</span><br><span class="line">        &lt;maven.compiler.source&gt;1.8&lt;/maven.compiler.source&gt;</span><br><span class="line">        &lt;maven.compiler.target&gt;1.8&lt;/maven.compiler.target&gt;</span><br><span class="line">        &lt;maven.compiler.compilerVersion&gt;1.8&lt;/maven.compiler.compilerVersion&gt;</span><br><span class="line">      &lt;/properties&gt;</span><br><span class="line">&lt;/profile&gt;</span><br></pre></td></tr></table></figure><h4 id="12-配置环境变量"><a href="#12-配置环境变量" class="headerlink" title="12. 配置环境变量"></a>12. 配置环境变量</h4><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta prompt_"># </span><span class="language-bash">编辑环境变量</span></span><br><span class="line">vim ~/.bashrc</span><br><span class="line">export JAVA_HOME=/opt/jdk</span><br><span class="line">export MAVEN_HOME=/opt/maven</span><br><span class="line">export PATH=$JAVA_HOME/bin:$MAVEN_HOME/bin:$PATH </span><br><span class="line"><span class="meta prompt_"></span></span><br><span class="line"><span class="meta prompt_"># </span><span class="language-bash">刷新配置</span></span><br><span class="line">source ~/.bashrc</span><br><span class="line"><span class="meta prompt_"></span></span><br><span class="line"><span class="meta prompt_"># </span><span class="language-bash">检查java和maven版本</span></span><br><span class="line">java -version</span><br><span class="line">mvn -version</span><br></pre></td></tr></table></figure><h2 id="编译-Hadoop"><a href="#编译-Hadoop" class="headerlink" title="编译 Hadoop"></a>编译 Hadoop</h2><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">cd /opt</span><br><span class="line">wget https://dlcdn.apache.org/hadoop/common/hadoop-3.4.0/hadoop-3.4.0-src.tar.gz</span><br><span class="line">tar zxvf hadoop-3.4.0-src.tar.gz</span><br><span class="line">cd /opt/hadoop-3.4.0-src</span><br></pre></td></tr></table></figure><div class="note warning flat"><p>修改 pom 文件</p><p><code>maven-enforcer-plugin</code> 插件是为了检查当前系统是否正确，可能因为我用的是 <code>wsl2</code> 的 CentOS7 系统，无法正确识别，这里根据的情况自行进行修改</p></div><p><strong>修改 maven-enforcer-plugin 插件配置</strong></p><p>修改 <code>hadoop-3.4.0-src\hadoop-common-project\hadoop-common\pom.xml</code></p><figure class="highlight vim"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">vi</span> hadoop-common-project\hadoop-common\pom.xml</span><br><span class="line"></span><br><span class="line">          <span class="symbol">&lt;plugin&gt;</span></span><br><span class="line">            <span class="symbol">&lt;groupId&gt;</span>org.apache.maven.plugins&lt;/groupId&gt;</span><br><span class="line">            <span class="symbol">&lt;artifactId&gt;</span>maven-enforcer-plugin&lt;/artifactId&gt;</span><br><span class="line">            <span class="symbol">&lt;executions&gt;</span></span><br><span class="line">              <span class="symbol">&lt;execution&gt;</span></span><br><span class="line">                <span class="symbol">&lt;id&gt;</span>enforce-os&lt;/id&gt;</span><br><span class="line">                <span class="symbol">&lt;goals&gt;</span></span><br><span class="line">                  <span class="symbol">&lt;goal&gt;</span>enforce&lt;/goal&gt;</span><br><span class="line">                &lt;/goals&gt;</span><br><span class="line">                <span class="symbol">&lt;configuration&gt;</span></span><br><span class="line">                  <span class="symbol">&lt;rules&gt;</span></span><br><span class="line">                    <span class="symbol">&lt;requireOS&gt;</span></span><br><span class="line">                      <span class="symbol">&lt;family&gt;</span>mac&lt;/family&gt;</span><br><span class="line">                      <span class="symbol">&lt;family&gt;</span>unix&lt;/family&gt;</span><br><span class="line">                      <span class="symbol">&lt;message&gt;</span>native build <span class="keyword">only</span> supported <span class="keyword">on</span> Mac <span class="built_in">or</span> Unix&lt;/message&gt;</span><br><span class="line">                    &lt;/requireOS&gt;</span><br><span class="line">                  &lt;/rules&gt;</span><br><span class="line">                  <span class="symbol">&lt;fail&gt;</span>true&lt;/fail&gt;</span><br><span class="line">                  <span class="symbol">&lt;skip&gt;</span>true&lt;/skip&gt;  ### 在配置中加入这一行，来跳过这个插件</span><br><span class="line">                &lt;/configuration&gt;</span><br><span class="line">              &lt;/execution&gt;</span><br><span class="line">            &lt;/executions&gt;</span><br><span class="line">          &lt;/plugin&gt;</span><br></pre></td></tr></table></figure><p>修改 <code>hadoop-3.4.0-src\hadoop-mapreduce-project\hadoop-mapreduce-client\hadoop-mapreduce-client-nativetask\pom.xml</code></p><figure class="highlight vim"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">vi</span> hadoop-mapreduce-project\hadoop-mapreduce-client\hadoop-mapreduce-client-nativetask\pom.xml</span><br><span class="line"></span><br><span class="line">          <span class="symbol">&lt;plugin&gt;</span></span><br><span class="line">            <span class="symbol">&lt;groupId&gt;</span>org.apache.maven.plugins&lt;/groupId&gt;</span><br><span class="line">            <span class="symbol">&lt;artifactId&gt;</span>maven-enforcer-plugin&lt;/artifactId&gt;</span><br><span class="line">            <span class="symbol">&lt;executions&gt;</span></span><br><span class="line">              <span class="symbol">&lt;execution&gt;</span></span><br><span class="line">                <span class="symbol">&lt;id&gt;</span>enforce-os&lt;/id&gt;</span><br><span class="line">                <span class="symbol">&lt;goals&gt;</span></span><br><span class="line">                  <span class="symbol">&lt;goal&gt;</span>enforce&lt;/goal&gt;</span><br><span class="line">                &lt;/goals&gt;</span><br><span class="line">                <span class="symbol">&lt;configuration&gt;</span></span><br><span class="line">                  <span class="symbol">&lt;rules&gt;</span></span><br><span class="line">                    <span class="symbol">&lt;requireOS&gt;</span></span><br><span class="line">                      <span class="symbol">&lt;family&gt;</span>mac&lt;/family&gt;</span><br><span class="line">                      <span class="symbol">&lt;family&gt;</span>unix&lt;/family&gt;</span><br><span class="line">                      <span class="symbol">&lt;message&gt;</span>native build <span class="keyword">only</span> supported <span class="keyword">on</span> Mac <span class="built_in">or</span></span><br><span class="line">                        Unix&lt;/message&gt;</span><br><span class="line">                    &lt;/requireOS&gt;</span><br><span class="line">                  &lt;/rules&gt;</span><br><span class="line">                  <span class="symbol">&lt;fail&gt;</span>true&lt;/fail&gt;</span><br><span class="line">                  <span class="symbol">&lt;skip&gt;</span>true&lt;/skip&gt;  ### 在配置中加入这一行，来跳过这个插件</span><br><span class="line">                &lt;/configuration&gt;</span><br><span class="line">              &lt;/execution&gt;</span><br><span class="line">            &lt;/executions&gt;</span><br><span class="line">          &lt;/plugin&gt;</span><br></pre></td></tr></table></figure><h3 id="编译"><a href="#编译" class="headerlink" title="编译"></a>编译</h3><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line">cd /opt/hadoop-3.4.0-src</span><br><span class="line">mvn clean package -Pdist,native,src -DskipTests -Dtar -X -e</span><br><span class="line"><span class="meta prompt_"># </span><span class="language-bash">命令说明</span></span><br><span class="line"><span class="meta prompt_"># </span><span class="language-bash">mvn 构建 java 项目</span></span><br><span class="line"><span class="meta prompt_"># </span><span class="language-bash">clean 清理之前的构建，可省略</span></span><br><span class="line"><span class="meta prompt_"># </span><span class="language-bash">package 编译项目的源代码并打包成一个 JAR 文件</span></span><br><span class="line"><span class="meta prompt_"># </span><span class="language-bash">-Pdist,native,src 激活构建配置文件的选项 dist、native 和 src 是三个不同的 Maven 构建配置文件</span></span><br><span class="line"><span class="meta prompt_"># </span><span class="language-bash">dist 用于构建分发版</span></span><br><span class="line"><span class="meta prompt_"># </span><span class="language-bash">native 用于构建包含本地代码（C/C++代码）的版本</span></span><br><span class="line"><span class="meta prompt_"># </span><span class="language-bash">src 用于包含源码的版本</span></span><br><span class="line"><span class="meta prompt_"># </span><span class="language-bash">-DskipTests 构建过程中跳过运行测试</span></span><br><span class="line"><span class="meta prompt_"># </span><span class="language-bash">-Dtar 构建过程中要生成一个.tar 包</span></span><br><span class="line"><span class="meta prompt_"># </span><span class="language-bash">-X 调试输出模式,有助于排查问题</span></span><br><span class="line"><span class="meta prompt_"># </span><span class="language-bash">-e 详细错误输出模式，显示完整的堆栈跟踪信息</span></span><br></pre></td></tr></table></figure>]]></content>
    
    
      
      
        
        
    <summary type="html">&lt;link rel=&quot;stylesheet&quot; class=&quot;aplayer-secondary-style-marker&quot; href=&quot;https://cdn.jsdelivr.net/npm/aplayer/dist/APlayer.min.css&quot;&gt;&lt;script src=&quot;</summary>
        
      
    
    
    
    
  </entry>
  
  <entry>
    <title>Linear Regression</title>
    <link href="https://blog.rishinyan.top/Linear%20Regression/"/>
    <id>https://blog.rishinyan.top/Linear%20Regression/</id>
    <published>2023-12-10T16:00:02.000Z</published>
    <updated>2024-11-29T06:25:29.000Z</updated>
    
    <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="https://cdn.jsdelivr.net/npm/aplayer/dist/APlayer.min.css"><script src="https://cdn.jsdelivr.net/npm/aplayer/dist/APlayer.min.js" class="aplayer-secondary-script-marker"></script><script class="meting-secondary-script-marker" src="https://cdn.jsdelivr.net/npm/meting/dist/Meting.min.js"></script><h2 id="Terminology-术语"><a href="#Terminology-术语" class="headerlink" title="Terminology 术语"></a>Terminology 术语</h2><p>x = “input” variable (feature)</p><p>y = “output” variable (“target” variable)</p><p>$\hat{y}$= prediction (estimated y)</p><p>m = number of training examples</p><p>(x, y) = single training example</p><p>$(x^{(i)},y^{(i)})$ =  $i^{th}$ training example. e.g. $(1^{st},2^{nd},3^{rd}…)$</p><p>$w,b$: parameters, coefficients or weights</p><h2 id="Process-流程"><a href="#Process-流程" class="headerlink" title="Process 流程"></a>Process 流程</h2><p>training set -&gt; learning algorithm -&gt; function</p><p>x -&gt; module(function) -&gt; $\hat{y}$</p><h2 id="Univariate-linear-regression-单变量线性回归"><a href="#Univariate-linear-regression-单变量线性回归" class="headerlink" title="Univariate linear regression 单变量线性回归"></a>Univariate linear regression 单变量线性回归</h2><p>$f_{w,b}(x)=wx+b$</p><p>Linear regression with one variable(single feature x).<br>只有一个变量的线性回归</p><h2 id="Cost-Function-squared-error-cost-function-损失函数"><a href="#Cost-Function-squared-error-cost-function-损失函数" class="headerlink" title="Cost Function(squared error cost function) 损失函数"></a>Cost Function(squared error cost function) 损失函数</h2><p>To measure how well a choice of w, and b fits the training data.<br>衡量选择的 w 和 b 对训练数据的拟合程度。</p><p>$\hat{y}^{(i)}=f_{w,b}(x^{(i)})=wx^{(i)}+b$</p><p>$J(w,b) = \frac1{2m}\sum<em>{i=1}^m({\hat{y}^{(i)}}-y^{(i)})^2= \frac1{2m}\sum</em>{i=1}^m(f_{w,b}(x^{(i)})-y^{(i)})^2$</p><ul><li><p>$f<em>{w,b}(x^{(i)})$ is our prediction for example $i$ using parameters $w,b$.<br>$f</em>{w,b}(x^{(i)})$ 是使用参数 $w,b$ 对第 $i$ 个实例的预测</p></li><li><p>$(f<em>{w,b}(x^{(i)}) -y^{(i)})^2$ is the squared difference between the target value and the prediction.<br>$(f</em>{w,b}(x^{(i)}) -y^{(i)})^2$ 是目标值与预测之间的平方差</p></li><li><p>These differences are summed over all the $m$ examples and divided by <code>2m</code> to produce the cost, $J(w,b)$.<br>这些差异在所有 $m$ 个实例上求和，并除以 <code>2m</code> 得到成本 $J(w,b)$</p></li></ul><p>Find w,b: ${\hat{y}}^{(i)}$ is close to $y^{(i)}$ for all $(x^{(i)},y^{(i)}).$<br>所有数据中预测y接近真实y的w，b系数</p><p>it measures the difference between the model’s predictions, and the actual true values for y.<br>它衡量了模型的预测与实际 y 的真实值之间的差异</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">def</span> <span class="title function_">compute_cost</span>(<span class="params">x, y, w, b</span>): </span><br><span class="line">    <span class="string">&quot;&quot;&quot;</span></span><br><span class="line"><span class="string">    计算线性回归的损失函数</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">    Args:</span></span><br><span class="line"><span class="string">      x (ndarray (m,)): 数据集， m个实例 </span></span><br><span class="line"><span class="string">      y (ndarray (m,)): 结果集</span></span><br><span class="line"><span class="string">      w,b (scalar)    : 模型参数  </span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">    Returns</span></span><br><span class="line"><span class="string">        total_cost (float): 使用w和b作为线性回归的参数来拟合x和y中的数据点的代价</span></span><br><span class="line"><span class="string">    &quot;&quot;&quot;</span></span><br><span class="line">    <span class="comment"># 实例个数</span></span><br><span class="line">    m = x.shape[<span class="number">0</span>] </span><br><span class="line"></span><br><span class="line">    cost_sum = <span class="number">0</span> </span><br><span class="line">    <span class="keyword">for</span> i <span class="keyword">in</span> <span class="built_in">range</span>(m): </span><br><span class="line">        f_wb = w * x[i] + b   </span><br><span class="line">        cost = (f_wb - y[i]) ** <span class="number">2</span>  </span><br><span class="line">        cost_sum = cost_sum + cost  </span><br><span class="line">    total_cost = (<span class="number">1</span> / (<span class="number">2</span> * m)) * cost_sum  </span><br><span class="line"></span><br><span class="line">    <span class="keyword">return</span> total_cost</span><br></pre></td></tr></table></figure><h2 id="Gradient-descent-algorithm-梯度下降算法"><a href="#Gradient-descent-algorithm-梯度下降算法" class="headerlink" title="Gradient descent algorithm 梯度下降算法"></a>Gradient descent algorithm 梯度下降算法</h2><ul><li><p>Start with some w, b<br>从一些初始的 w,b 开始</p></li><li><p>Keep changing w,b ܾ to reduce J(w, b)<br>不断调整 w,b 以减小 J(w,b)</p></li><li><p>Until we settle at or near a minimum<br>直到我们稳定在或接近一个区域最小值</p></li></ul><h3 id="implementing-实现"><a href="#implementing-实现" class="headerlink" title="implementing 实现"></a>implementing 实现</h3><p>$\begin{cases} w &amp;= w - \alpha \frac{\partial J(w,b)}{\partial w} \ b &amp;= b - \alpha \frac{\partial J(w,b)}{\partial b} \end{cases}$</p><p>$\alpha$ is learning rate,  $\frac{\partial J(w,b)}{\partial w}<br>$ is derivative<br>$\alpha$是学习率, $\frac{\partial J(w,b)}{\partial w}$是偏导数</p><p>Near a local minimum<br>局部最小值附近</p><ul><li><p>Derivative becomes smaller<br>导数变小</p></li><li><p>Update steps become smaller<br>更新步长变小</p></li></ul><p>repeat until convergence, where, parameters 𝑤, 𝑏 are updated simultaneously.<br>重复直到收敛，其中，参数𝑤, 𝑏同时更新。</p><p>Linear regression model: $f_{w,b}(x^{(i)}) = wx^{(i)} + b$</p><p>Cost function: $J(w,b) = \frac{1}{2m} \sum\limits<em>{i = 0}^{m-1} (f</em>{w,b}(x^{(i)}) - y^{(i)})^2$</p><p>$\frac{\partial J(w,b)}{\partial w} =\frac{1}{m} \sum\limits<em>{i = 0}^{m-1} (f</em>{w,b}(x^{(i)}) - y^{(i)})x^{(i)}$</p><p>$\frac{\partial J(w,b)}{\partial b} = \frac{1}{m} \sum\limits<em>{i = 0}^{m-1} (f</em>{w,b}(x^{(i)}) - y^{(i)})$ </p><p>Here simultaniously means that you calculate the partial derivatives for all the parameters before updating any of the parameters.<br>这里的 “同时” 意味着在更新任何参数之前，同时计算所有参数的偏导数。</p><p><code>compute_gradient</code>  returns $\frac{\partial J(w,b)}{\partial w}$,$\frac{\partial J(w,b)}{\partial b}$. </p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">def</span> <span class="title function_">compute_gradient</span>(<span class="params">x, y, w, b</span>): </span><br><span class="line">    <span class="string">&quot;&quot;&quot;</span></span><br><span class="line"><span class="string">    计算线性回归的梯度</span></span><br><span class="line"><span class="string">    Args:</span></span><br><span class="line"><span class="string">      x (ndarray (m,)): 数据集， m个实例 </span></span><br><span class="line"><span class="string">      y (ndarray (m,)): 结果集</span></span><br><span class="line"><span class="string">      w,b (scalar)    : 模型参数  </span></span><br><span class="line"><span class="string">    Returns</span></span><br><span class="line"><span class="string">      dj_dw (scalar): cost相对于参数w的梯度</span></span><br><span class="line"><span class="string">      dj_db (scalar): cost相对于参数b的梯度      </span></span><br><span class="line"><span class="string">     &quot;&quot;&quot;</span></span><br><span class="line"></span><br><span class="line">    <span class="comment"># 实例个数</span></span><br><span class="line">    m = x.shape[<span class="number">0</span>]    </span><br><span class="line">    dj_dw = <span class="number">0</span></span><br><span class="line">    dj_db = <span class="number">0</span></span><br><span class="line"></span><br><span class="line">    <span class="keyword">for</span> i <span class="keyword">in</span> <span class="built_in">range</span>(m):  </span><br><span class="line">        f_wb = w * x[i] + b </span><br><span class="line">        dj_dw_i = (f_wb - y[i]) * x[i] </span><br><span class="line">        dj_db_i = f_wb - y[i] </span><br><span class="line">        dj_db += dj_db_i</span><br><span class="line">        dj_dw += dj_dw_i </span><br><span class="line">    dj_dw = dj_dw / m </span><br><span class="line">    dj_db = dj_db / m </span><br><span class="line"></span><br><span class="line">    <span class="keyword">return</span> dj_dw, dj_db</span><br></pre></td></tr></table></figure><p>Below <code>gradient_descent</code>, you will utilize this function to find optimal values of $w$ and $b$ on the training data.</p><p>$\begin{cases} w &amp;= w - \alpha \frac{\partial J(w,b)}{\partial w} \ b &amp;= b - \alpha \frac{\partial J(w,b)}{\partial b} \end{cases}$</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">def</span> <span class="title function_">gradient_descent</span>(<span class="params">x, y, w_in, b_in, alpha, num_iters, gradient_function, num_iters</span>): </span><br><span class="line">    <span class="string">&quot;&quot;&quot;</span></span><br><span class="line"><span class="string">    执行梯度下降来拟合参数 w 和 b。通过采取学习率 alpha 进行 num_iters 次梯度步骤来更新 w 和 b</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">    Args:</span></span><br><span class="line"><span class="string">      x (ndarray (m,))  : 数据集， m个实例  </span></span><br><span class="line"><span class="string">      y (ndarray (m,))  : 结果集</span></span><br><span class="line"><span class="string">      w_in,b_in (scalar): 模型参数的初始值  </span></span><br><span class="line"><span class="string">      alpha (float):     学习率</span></span><br><span class="line"><span class="string">      num_iters (int):   运行梯度下降的迭代次数</span></span><br><span class="line"><span class="string">      gradient_function: 调用该函数生成gradient</span></span><br><span class="line"><span class="string">      num_iters (int)     : 运行梯度下降的迭代次数</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">    Returns:</span></span><br><span class="line"><span class="string">      w (scalar): 在运行梯度下降后更新的参数值</span></span><br><span class="line"><span class="string">      b (scalar): 在运行梯度下降后更新的参数值</span></span><br><span class="line"><span class="string">      &quot;&quot;&quot;</span></span><br><span class="line"></span><br><span class="line">    b = b_in</span><br><span class="line">    w = w_in</span><br><span class="line"></span><br><span class="line">    <span class="keyword">for</span> i <span class="keyword">in</span> <span class="built_in">range</span>(num_iters):</span><br><span class="line">        <span class="comment"># 计算梯度并使用gradient_function更新参数</span></span><br><span class="line">        dj_dw, dj_db = gradient_function(x, y, w , b)     </span><br><span class="line"></span><br><span class="line">        <span class="comment"># 更新参数</span></span><br><span class="line">        b = b - alpha * dj_db                            </span><br><span class="line">        w = w - alpha * dj_dw                            </span><br><span class="line"></span><br><span class="line">    <span class="keyword">return</span> w, b</span><br></pre></td></tr></table></figure><h2 id="Multiple-Linear-Regression-多元线性回归"><a href="#Multiple-Linear-Regression-多元线性回归" class="headerlink" title="Multiple Linear Regression 多元线性回归"></a>Multiple Linear Regression 多元线性回归</h2><h3 id="Terminology"><a href="#Terminology" class="headerlink" title="Terminology"></a>Terminology</h3><p>$x_j=j^{th}$ feature</p><p>n = number of features</p><p>$\vec{x}^{(i)}$ = features of $i^{th}$  training example</p><p>$\vec{x}^{(i)}_j$= value of feature j in $i^{th}$ training example</p><h3 id="Model"><a href="#Model" class="headerlink" title="Model"></a>Model</h3><p>$f_{\vec{w},b}(\vec{x})= \vec{w} \cdot \vec{x} + b= w_1x_1+w_2x_2+w_3x_3+···+w_nx_n+b$</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">def</span> <span class="title function_">predict_single_loop</span>(<span class="params">x, w, b</span>): </span><br><span class="line">    <span class="string">&quot;&quot;&quot;</span></span><br><span class="line"><span class="string">    使用线性回归进行单一预测on</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">    Args:</span></span><br><span class="line"><span class="string">      x (ndarray): Shape (n,) 带有多特征的例子</span></span><br><span class="line"><span class="string">      w (ndarray): Shape (n,) 模型参数    </span></span><br><span class="line"><span class="string">      b (scalar):  模型参数   </span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">    Returns:</span></span><br><span class="line"><span class="string">      p (scalar):  预测值</span></span><br><span class="line"><span class="string">    &quot;&quot;&quot;</span></span><br><span class="line">    n = x.shape[<span class="number">0</span>]</span><br><span class="line">    p = <span class="number">0</span></span><br><span class="line">    <span class="keyword">for</span> i <span class="keyword">in</span> <span class="built_in">range</span>(n):</span><br><span class="line">        p_i = x[i] * w[i]  </span><br><span class="line">        p = p + p_i         </span><br><span class="line">    p = p + b                </span><br><span class="line">    <span class="keyword">return</span> p</span><br><span class="line"></span><br><span class="line"><span class="comment"># We can make use of vector operations to speed up predictions.</span></span><br><span class="line"><span class="keyword">def</span> <span class="title function_">predict</span>(<span class="params">x, w, b</span>): </span><br><span class="line">    <span class="string">&quot;&quot;&quot;</span></span><br><span class="line"><span class="string">    使用线性回归进行单一预测on</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">    Args:</span></span><br><span class="line"><span class="string">      x (ndarray): Shape (n,) 带有多特征的例子</span></span><br><span class="line"><span class="string">      w (ndarray): Shape (n,) 模型参数    </span></span><br><span class="line"><span class="string">      b (scalar):  模型参数   </span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">    Returns:</span></span><br><span class="line"><span class="string">      p (scalar):  预测值rediction</span></span><br><span class="line"><span class="string">    &quot;&quot;&quot;</span></span><br><span class="line">    p = np.dot(x, w) + b     </span><br><span class="line">    <span class="keyword">return</span> p</span><br></pre></td></tr></table></figure><h3 id="Cost-With-Multiple-Variables"><a href="#Cost-With-Multiple-Variables" class="headerlink" title="Cost With Multiple Variables"></a>Cost With Multiple Variables</h3><p>$J(\vec{w},b) = \frac{1}{2m} \sum\limits<em>{i = 1}^{m} (f</em>{\vec{w},b}(\vec{x}^{(i)}) - y^{(i)})^2$</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">def</span> <span class="title function_">compute_cost</span>(<span class="params">X, y, w, b</span>): </span><br><span class="line">    <span class="string">&quot;&quot;&quot;</span></span><br><span class="line"><span class="string">    计算损失</span></span><br><span class="line"><span class="string">    Args:</span></span><br><span class="line"><span class="string">      X (ndarray (m,n)): Data, m个实例n个特征</span></span><br><span class="line"><span class="string">      y (ndarray (m,)) : 目标值</span></span><br><span class="line"><span class="string">      w (ndarray (n,)) : 模型参数</span></span><br><span class="line"><span class="string">      b (scalar)       : 模型参数</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">    Returns:</span></span><br><span class="line"><span class="string">      cost (scalar): 损失值</span></span><br><span class="line"><span class="string">    &quot;&quot;&quot;</span></span><br><span class="line">    m = X.shape[<span class="number">0</span>]</span><br><span class="line">    cost = <span class="number">0.0</span></span><br><span class="line">    <span class="keyword">for</span> i <span class="keyword">in</span> <span class="built_in">range</span>(m):                                </span><br><span class="line">        f_wb_i = np.dot(X[i], w) + b           <span class="comment">#(n,)(n,) = scalar (see np.dot)</span></span><br><span class="line">        cost = cost + (f_wb_i - y[i])**<span class="number">2</span>       <span class="comment">#scalar</span></span><br><span class="line">    cost = cost / (<span class="number">2</span> * m)                      <span class="comment">#scalar    </span></span><br><span class="line">    <span class="keyword">return</span> cost</span><br></pre></td></tr></table></figure><h3 id="Gradient-descent"><a href="#Gradient-descent" class="headerlink" title="Gradient descent"></a>Gradient descent</h3><p>$w_j=w_j-\alpha\frac{\partial J(\vec{w},b)}{\partial{w_j}}$</p><p>$b=b-\alpha\frac{\partial{J(\vec{w},b)}}{\partial{b}}$</p><p>$\begin{cases}w<em>1=w_1-\alpha\frac{1}{m} \sum\limits</em>{i = 1}^{m} (f<em>{\vec{w},b}(\vec{x}^{(i)}) - y^{(i)})x_1^{(i)}\ .\ .\ .\ w_n=w_n-\alpha\frac{1}{m} \sum\limits</em>{i = 1}^{m} (f<em>{\vec{w},b}(\vec{x}^{(i)}) - y^{(i)})x_n^{(i)}\ b=b-\alpha\frac{1}{m} \sum\limits</em>{i = 1}^{m} (f_{\vec{w},b}(\vec{x}^{(i)}) - y^{(i)})\end{cases}$</p><p>n &gt;= 2, and simultaneously update $w_j$(for j = 1,…,n) and b</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">def</span> <span class="title function_">compute_gradient</span>(<span class="params">X, y, w, b</span>): </span><br><span class="line">    <span class="string">&quot;&quot;&quot;</span></span><br><span class="line"><span class="string">    计算线性回归的梯度</span></span><br><span class="line"><span class="string">    Args:</span></span><br><span class="line"><span class="string">      X (ndarray (m,n)): Data, m个实例n个特征</span></span><br><span class="line"><span class="string">      y (ndarray (m,)) : 目标值</span></span><br><span class="line"><span class="string">      w (ndarray (n,)) : 模型参数  </span></span><br><span class="line"><span class="string">      b (scalar)       : 模型参数</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">    Returns:</span></span><br><span class="line"><span class="string">      dj_dw (ndarray (n,)): 对于参数 w 的cost函数梯度 </span></span><br><span class="line"><span class="string">      dj_db (scalar):       对于参数 b 的cost函数梯度 </span></span><br><span class="line"><span class="string">    &quot;&quot;&quot;</span></span><br><span class="line">    m,n = X.shape           <span class="comment">#(number of examples, number of features)</span></span><br><span class="line">    dj_dw = np.zeros((n,))</span><br><span class="line">    dj_db = <span class="number">0.</span></span><br><span class="line"></span><br><span class="line">    <span class="keyword">for</span> i <span class="keyword">in</span> <span class="built_in">range</span>(m):                             </span><br><span class="line">        err = (np.dot(X[i], w) + b) - y[i]   </span><br><span class="line">        <span class="keyword">for</span> j <span class="keyword">in</span> <span class="built_in">range</span>(n):                         </span><br><span class="line">            dj_dw[j] = dj_dw[j] + err * X[i, j]    </span><br><span class="line">        dj_db = dj_db + err                        </span><br><span class="line">    dj_dw = dj_dw / m                                </span><br><span class="line">    dj_db = dj_db / m                                </span><br><span class="line"></span><br><span class="line">    <span class="keyword">return</span> dj_db, dj_dw</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">def</span> <span class="title function_">gradient_descent</span>(<span class="params">X, y, w_in, b_in, cost_function, gradient_function, alpha, num_iters</span>): </span><br><span class="line">    <span class="string">&quot;&quot;&quot;</span></span><br><span class="line"><span class="string">    执行批量梯度下降以学习 w 和 b。通过采取 num_iters 步长为 learning rate 的梯度步骤来更新 w 和 b</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">    Args:</span></span><br><span class="line"><span class="string">      X (ndarray (m,n))   : Data, m个实例n个特征</span></span><br><span class="line"><span class="string">      y (ndarray (m,))    : 目标值</span></span><br><span class="line"><span class="string">      w_in (ndarray (n,)) : 初始模型参数</span></span><br><span class="line"><span class="string">      b_in (scalar)       : 初始模型参数</span></span><br><span class="line"><span class="string">      cost_function       : 计算cost的函数</span></span><br><span class="line"><span class="string">      gradient_function   : 计算梯度的函数</span></span><br><span class="line"><span class="string">      alpha (float)       : 学习率</span></span><br><span class="line"><span class="string">      num_iters (int)     : 运行梯度下降的迭代次数</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">    Returns:</span></span><br><span class="line"><span class="string">      w (ndarray (n,)) : 更新后的参数结果 </span></span><br><span class="line"><span class="string">      b (scalar)       : 更新后的参数结果</span></span><br><span class="line"><span class="string">      &quot;&quot;&quot;</span></span><br><span class="line"></span><br><span class="line">    w = copy.deepcopy(w_in)  <span class="comment">#在函数内部避免修改全局变量 w</span></span><br><span class="line">    b = b_in</span><br><span class="line"></span><br><span class="line">    <span class="keyword">for</span> i <span class="keyword">in</span> <span class="built_in">range</span>(num_iters):</span><br><span class="line"></span><br><span class="line">        <span class="comment"># 计算梯度并更新参数</span></span><br><span class="line">        dj_db,dj_dw = gradient_function(X, y, w, b)   <span class="comment">##None</span></span><br><span class="line"></span><br><span class="line">        <span class="comment"># 更新参数使用 w, b, alpha and gradient</span></span><br><span class="line">        w = w - alpha * dj_dw               <span class="comment">##None</span></span><br><span class="line">        b = b - alpha * dj_db               <span class="comment">##None</span></span><br><span class="line"></span><br><span class="line">    <span class="keyword">return</span> w, b <span class="comment"># 返回最终 w,b</span></span><br></pre></td></tr></table></figure><h2 id="Normal-equation-正规方程"><a href="#Normal-equation-正规方程" class="headerlink" title="Normal equation 正规方程"></a>Normal equation 正规方程</h2><ul><li>only for linear regression</li><li>solve for w,b without iterations</li></ul><p>Disadvantage:</p><ul><li>dosen’t generalize to other learning algorithms</li><li>slow when number of features is large (&gt; 10000)</li></ul><h2 id="Feature-scaling-特征缩放"><a href="#Feature-scaling-特征缩放" class="headerlink" title="Feature scaling 特征缩放"></a>Feature scaling 特征缩放</h2><p>Feature scaling, essentially dividing each positive feature by its maximum value, or more generally, rescale each feature by both its minimum and maximum values using (x-min)/(max-min).</p><p>aim for about -1 &lt;= $x_j$ &lt;= 1 for each feature $x_j$</p><h3 id="Mean-normalization-均值归一化"><a href="#Mean-normalization-均值归一化" class="headerlink" title="Mean normalization 均值归一化"></a>Mean normalization 均值归一化</h3><p>$x_i := \dfrac{x_i - \mu_i}{max - min}$ </p><h3 id="Z-score-normalization-Z-score归一化"><a href="#Z-score-normalization-Z-score归一化" class="headerlink" title="Z-score normalization Z-score归一化"></a>Z-score normalization Z-score归一化</h3><p>After z-score normalization, all features will have a mean of 0 and a standard deviation of 1.</p><p>$x^{(i)}_j = \dfrac{x^{(i)}_j - \mu_j}{\sigma_j} \tag{4}$ </p><p>where $j$ selects a feature or a column in the $\mathbf{X}$ matrix. $µ_j$ is the mean of all the values for feature (j) and $\sigma_j$ is the standard deviation of feature (j).</p><p><strong>Implementation Note:</strong> When normalizing the features, it is important to store the values used for normalization - the mean value and the standard deviation used for the computations. </p><p>Given a new x value, we must first normalize x using the mean and standard deviation that we had previously computed from the training set.</p>]]></content>
    
    
    <summary type="html">线性回归</summary>
    
    
    
    <category term="机器学习" scheme="https://blog.rishinyan.top/categories/%E6%9C%BA%E5%99%A8%E5%AD%A6%E4%B9%A0/"/>
    
    
    <category term="监督学习" scheme="https://blog.rishinyan.top/tags/%E7%9B%91%E7%9D%A3%E5%AD%A6%E4%B9%A0/"/>
    
  </entry>
  
  <entry>
    <title>Jupyter Notebook 安装</title>
    <link href="https://blog.rishinyan.top/Jupyter%20Notebook%20%E5%AE%89%E8%A3%85/"/>
    <id>https://blog.rishinyan.top/Jupyter%20Notebook%20%E5%AE%89%E8%A3%85/</id>
    <published>2023-12-10T16:00:01.000Z</published>
    <updated>2024-11-29T06:25:32.000Z</updated>
    
    <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="https://cdn.jsdelivr.net/npm/aplayer/dist/APlayer.min.css"><script src="https://cdn.jsdelivr.net/npm/aplayer/dist/APlayer.min.js" class="aplayer-secondary-script-marker"></script><script class="meting-secondary-script-marker" src="https://cdn.jsdelivr.net/npm/meting/dist/Meting.min.js"></script><h2 id="介绍"><a href="#介绍" class="headerlink" title="介绍"></a>介绍</h2><p>Jupyter Notebook 是一个开源的交互式计算环境，最初是作为IPython项目的一部分开发的。它提供了一个基于网页的界面，允许用户创建和共享包含代码、文本、图像、公式和可视化内容的文档。</p><p>Anaconda直接安装与Docker安装</p><h2 id="安装环境"><a href="#安装环境" class="headerlink" title="安装环境"></a>安装环境</h2><p>centos 7.9<br>docker 24.0.7</p><h2 id="Anaconda安装"><a href="#Anaconda安装" class="headerlink" title="Anaconda安装"></a>Anaconda安装</h2><p><a href="https://www.anaconda.com/download#downloads">Anaconda下载地址</a></p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">wget https://repo.anaconda.com/archive/Anaconda3-2023.09-0-Linux-x86_64.sh</span><br><span class="line"><span class="built_in">chmod</span> +x Anaconda3-2023.09-0-Linux-x86_64.sh</span><br><span class="line">./Anaconda3-2023.09-0-Linux-x86_64.sh</span><br></pre></td></tr></table></figure><p>配置环境变量</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">vim ~/.bash_profile</span><br><span class="line"><span class="comment"># 在文件末尾追加</span></span><br><span class="line"><span class="comment"># /opt/anaconda3是你安装Anaconda的路径，可替换</span></span><br><span class="line"><span class="built_in">export</span> ANACONDA=/opt/anaconda3</span><br><span class="line"><span class="built_in">export</span> PATH=<span class="variable">$ANACONDA</span>/bin:<span class="variable">$PATH</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 使用:wq保存文件后,刷新配置</span></span><br><span class="line"><span class="built_in">source</span> ~/.bash_profile</span><br></pre></td></tr></table></figure><h3 id="启动Jupyter-Notebook"><a href="#启动Jupyter-Notebook" class="headerlink" title="启动Jupyter Notebook"></a>启动Jupyter Notebook</h3><p>生成jupyter 配置文件</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">jupyter notebook --generate-config</span><br><span class="line"><span class="comment"># 修改jupyter的工作路径</span></span><br><span class="line">vim ~/.jupyter/jupyter_notebook_config.py</span><br><span class="line"><span class="comment"># 将c.NotebookApp.notebook_dir的值修改为你的工作路径</span></span><br><span class="line">c.NotebookApp.notebook_dir = <span class="string">&#x27;/opt/jupyter&#x27;</span></span><br></pre></td></tr></table></figure><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 监听所有可用的网络接口（0.0.0.0），并指定端口号为 8888，同时关闭默认的 Web 浏览器打开选项（--no-browser）</span></span><br><span class="line">jupyter notebook --port=8888 --ip=0.0.0.0 --no-browser</span><br></pre></td></tr></table></figure><p>获取到jupyter的web</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">[I 15:21:48.611 NotebookApp] Jupyter Notebook 6.5.4 is running at:</span><br><span class="line">[I 15:21:48.611 NotebookApp] http://localhost:8888/?token=xxxxxxxxxxxxxxx</span><br><span class="line">[I 15:21:48.611 NotebookApp]  or http://127.0.0.1:8888/?token=xxxxxxxxxxxxxxx</span><br><span class="line">[I 15:21:48.611 NotebookApp] Use Control-C to stop this server and shut down all kernels (twice to skip confirmation).</span><br></pre></td></tr></table></figure><h2 id="Docker构建jupyterlab"><a href="#Docker构建jupyterlab" class="headerlink" title="Docker构建jupyterlab"></a>Docker构建jupyterlab</h2><p>镜像可指定python的版本，tensorflow的版本。cuda与cudnn使用本地已经安装好的库，请确保已经安装了显卡相关驱动，cuda与cudnn等，并安装nvidia-container-toolkit，配置daemon.json文件相关runtime设置。</p><h3 id="编译python脚本"><a href="#编译python脚本" class="headerlink" title="编译python脚本"></a>编译python脚本</h3><p>setup.python.sh</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta prompt_">#</span><span class="language-bash">!/usr/bin/env bash</span></span><br><span class="line">set -xe</span><br><span class="line"></span><br><span class="line">source ~/.bashrc</span><br><span class="line">VERSION=$1</span><br><span class="line">PYTHON=$2</span><br><span class="line"><span class="meta prompt_"></span></span><br><span class="line"><span class="meta prompt_"># </span><span class="language-bash">Install Python packages <span class="keyword">for</span> this container<span class="string">&#x27;s version</span></span></span><br><span class="line">yum -y update</span><br><span class="line">yum -y install epel-release</span><br><span class="line">yum -y install gcc openssl-devel bzip2-devel libffi-devel wget make sqlite-devel</span><br><span class="line">yum clean all</span><br><span class="line"></span><br><span class="line">wget https://www.python.org/ftp/python/$PYTHON/Python-$PYTHON.tgz</span><br><span class="line">tar xzf Python-$PYTHON.tgz</span><br><span class="line">cd Python-$PYTHON</span><br><span class="line">./configure --enable-optimizations</span><br><span class="line">make altinstall</span><br><span class="line">cd ..</span><br><span class="line">rm -rf Python-$PYTHON Python-$PYTHON.tgz</span><br><span class="line"><span class="meta prompt_"></span></span><br><span class="line"><span class="meta prompt_"># </span><span class="language-bash"><span class="string">Setup links for TensorFlow to compile.</span></span></span><br><span class="line"><span class="meta prompt_"># </span><span class="language-bash"><span class="string">Referenced in devel.usertools/*.bazelrc</span></span></span><br><span class="line">ln -sf /usr/local/bin/$VERSION /usr/bin/python3</span><br><span class="line"><span class="meta prompt_"># </span><span class="language-bash"><span class="string">ln -sf /usr/local/bin/$VERSION /usr/bin/python</span></span></span><br><span class="line"><span class="meta prompt_"></span></span><br><span class="line"><span class="meta prompt_"># </span><span class="language-bash"><span class="string">Python 3.10 include headers fix:</span></span></span><br><span class="line"><span class="meta prompt_"># </span><span class="language-bash"><span class="string">sysconfig.get_path(&#x27;</span>include<span class="string">&#x27;) incorrectly points to /usr/local/include/python</span></span></span><br><span class="line"><span class="meta prompt_"># </span><span class="language-bash"><span class="string">map /usr/include/python3.10 to /usr/local/include/python3.10</span></span></span><br><span class="line">if [[ ! -f &quot;/usr/local/include/$VERSION&quot; ]]; then</span><br><span class="line">  ln -sf /usr/include/$VERSION /usr/local/include/$VERSION</span><br><span class="line">fi</span><br><span class="line"><span class="meta prompt_"></span></span><br><span class="line"><span class="meta prompt_"># </span><span class="language-bash"><span class="string">Install pip</span></span></span><br><span class="line">curl https://bootstrap.pypa.io/get-pip.py -o get-pip.py</span><br><span class="line">python3 get-pip.py</span><br><span class="line">python3 -m pip install --no-cache-dir --upgrade pip</span><br><span class="line">rm -f get-pip.py</span><br></pre></td></tr></table></figure><h3 id="安装jupyterlab脚本"><a href="#安装jupyterlab脚本" class="headerlink" title="安装jupyterlab脚本"></a>安装jupyterlab脚本</h3><p>setup.jupyter.sh</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta prompt_">#</span><span class="language-bash">!/bin/bash</span></span><br><span class="line">pip uninstall urllib3</span><br><span class="line">pip install urllib3==1.26.7</span><br><span class="line">jupyter serverextension enable --py jupyter_http_over_ws</span><br><span class="line"></span><br><span class="line">mkdir /.local</span><br><span class="line">chmod a+rwx /.local</span><br><span class="line"></span><br><span class="line">yum remove -y wget</span><br><span class="line"></span><br><span class="line">python3 -m ipykernel.kernelspec</span><br></pre></td></tr></table></figure><h3 id="安装jupyterlab所需"><a href="#安装jupyterlab所需" class="headerlink" title="安装jupyterlab所需"></a>安装jupyterlab所需</h3><p>jupyter.requirements.txt</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">jupyterlab</span><br><span class="line">matplotlib</span><br><span class="line">jupyter_http_over_ws</span><br><span class="line">pysqlite3</span><br></pre></td></tr></table></figure><h3 id="构建image"><a href="#构建image" class="headerlink" title="构建image"></a>构建image</h3><p>jupyterlab.Dockerfile</p><figure class="highlight dockerfile"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">FROM</span> centos:centos7 as base</span><br><span class="line"><span class="keyword">ENV</span> LANG C.UTF-<span class="number">8</span></span><br><span class="line"><span class="keyword">ENV</span> TZ <span class="string">&quot;Asia/Shanghai&quot;</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">ARG</span> PYTHON_VERSION=python3.<span class="number">7</span></span><br><span class="line"><span class="keyword">ARG</span> P_VERSION=<span class="number">3.7</span>.<span class="number">10</span></span><br><span class="line"><span class="keyword">ARG</span> TENSORFLOW_PACKAGE=tensorflow==<span class="number">2.6</span>.<span class="number">5</span></span><br><span class="line"><span class="keyword">COPY</span><span class="language-bash"> setup.python.sh /setup.python.sh</span></span><br><span class="line"><span class="keyword">RUN</span><span class="language-bash"> /setup.python.sh <span class="variable">$PYTHON_VERSION</span> <span class="variable">$P_VERSION</span></span></span><br><span class="line"><span class="keyword">RUN</span><span class="language-bash"> pip install --no-cache-dir <span class="variable">$&#123;TENSORFLOW_PACKAGE&#125;</span> -i https://pypi.tuna.tsinghua.edu.cn/simple</span></span><br><span class="line"><span class="keyword">RUN</span><span class="language-bash"> <span class="built_in">echo</span> <span class="string">&#x27;export LD_LIBRARY_PATH=/usr/local/cuda/lib64&#x27;</span> &gt;&gt; ~/.bashrc</span></span><br><span class="line"><span class="keyword">RUN</span><span class="language-bash"> <span class="built_in">source</span> ~/.bashrc</span></span><br><span class="line"><span class="keyword">WORKDIR</span><span class="language-bash"> /workdir</span></span><br><span class="line"><span class="keyword">EXPOSE</span> <span class="number">8888</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">FROM</span> base as jupyterlab</span><br><span class="line"><span class="keyword">COPY</span><span class="language-bash"> jupyter.requirements.txt /jupyter.requirements.txt</span></span><br><span class="line"><span class="keyword">COPY</span><span class="language-bash"> setup.jupyter.sh /setup.jupyter.sh</span></span><br><span class="line"><span class="keyword">RUN</span><span class="language-bash"> python3 -m pip install --no-cache-dir -r /jupyter.requirements.txt -U</span></span><br><span class="line"><span class="keyword">RUN</span><span class="language-bash"> /setup.jupyter.sh</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">CMD</span><span class="language-bash"> [<span class="string">&quot;bash&quot;</span>, <span class="string">&quot;-c&quot;</span>, <span class="string">&quot;source ~/.bashrc &amp;&amp; jupyter lab --notebook-dir=/workdir --ip 0.0.0.0 --no-browser --allow-root&quot;</span>]</span></span><br></pre></td></tr></table></figure><p>生成image</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">chmod +x setup.python.sh setup.jupyter.sh</span><br><span class="line">docker build --target=jupyterlab --build-arg TENSORFLOW_PACKAGE=tensorflow==2.6.5 --build-arg PYTHON_VERSION=python3.7 --build-arg P_VERSION=3.7.10 -t jupyterlab:latest -f jupyterlab.Dockerfile .</span><br><span class="line"><span class="meta prompt_"># </span><span class="language-bash">--target 选择FROM构建镜像</span></span><br><span class="line"><span class="meta prompt_"># </span><span class="language-bash">--build-arg dockerfile中参数</span></span><br><span class="line"><span class="meta prompt_"># </span><span class="language-bash">-t 生成镜像名</span></span><br><span class="line"><span class="meta prompt_"># </span><span class="language-bash">-f 镜像文件名</span></span><br><span class="line"><span class="meta prompt_"># </span><span class="language-bash">. 当前目录</span></span><br></pre></td></tr></table></figure><h3 id="运行Container"><a href="#运行Container" class="headerlink" title="运行Container"></a>运行Container</h3><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">docker run -it --gpus all --rm -v /usr/local/cuda-11.2/:/usr/local/cuda -p 8888:8888 --name jupyterlab jupyterlab:latest</span><br><span class="line"><span class="meta prompt_"># </span><span class="language-bash">--gpus 需要对docker的daemon.json文件中配置<span class="string">&quot;default-runtime&quot;</span>: <span class="string">&quot;nvidia&quot;</span></span></span><br><span class="line"><span class="meta prompt_"># </span><span class="language-bash">-v 指定当前系统中的cuda目录</span></span><br></pre></td></tr></table></figure><h2 id="参考"><a href="#参考" class="headerlink" title="参考"></a>参考</h2><p><a href="https://github.com/tensorflow/build/tree/master/tensorflow_runtime_dockerfiles">build/tensorflow_runtime_dockerfiles at master · tensorflow/build (github.com)</a></p><p><a href="https://stackoverflow.com/questions/76855634/jetson-orin-nx-nvidia-container-runtime-not-utilizing-gpu">kubernetes - Jetson Orin NX nvidia-container-runtime not utilizing GPU - Stack Overflow</a></p>]]></content>
    
    
      
      
        
        
    <summary type="html">&lt;link rel=&quot;stylesheet&quot; class=&quot;aplayer-secondary-style-marker&quot; href=&quot;https://cdn.jsdelivr.net/npm/aplayer/dist/APlayer.min.css&quot;&gt;&lt;script src=&quot;</summary>
        
      
    
    
    
    
    <category term="jupyter" scheme="https://blog.rishinyan.top/tags/jupyter/"/>
    
  </entry>
  
</feed>
